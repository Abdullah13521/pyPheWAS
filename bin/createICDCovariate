from pyPheWAS.pyPhewasCore import *
import pandas as pd
import sys, os

optargs = {
	'--phenotypefiles': 'phenotypes',
	'--groupfiles':'groups',
	'--path':'path',
	'--groupout': 'groupout',
	'--icd':'icd'
}

"""
Retrieve and validate all arguments.
"""

args = sys.argv[1:]

# Define any default arguments
kwargs = {'path':'.'}

kwargs = process_args(kwargs, optargs, *args)

# Change path to absolute path
kwargs['path'] = os.path.join(os.path.abspath(kwargs['path']),'')

print(kwargs)


# Assert that valid files were given
assert kwargs['phenotypes'].endswith('.csv'), "%s is not a valid phenotype file, must be a .csv file" % (kwargs['phenotypes'])
assert kwargs['groups'].endswith('.csv'), "%s is not a valid group file, must be a .csv file" % (kwargs['groups'])

# Assert that the output file is valid
#assert kwargs['phenout'].endswith('.csv'), "%s is not a valid output file, must be a .csv file" % (kwargs['phenout'])
assert kwargs['groupout'].endswith('.csv'), "%s is not a vailid output file, must be a .csv file" % (kwargs['groupout'])

# Print Arguments
display_kwargs(kwargs)

# Make all arguments local variables
locals().update(kwargs)

ni = pd.read_csv(os.sep.join([path, phenotypes]))
ng = pd.read_csv(os.sep.join([path, groups]))

ng['icd=%s'%(icd)] = ng['id'].isin(ni[ni.icd9==icd]['id'])

ng.to_csv(os.sep.join([path,groupout]))

